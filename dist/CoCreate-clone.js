(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["CoCreateClone"] = factory();
	else
		root["CoCreateClone"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./CoCreate-components/CoCreate-clone/src/CoCreate-clone.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./CoCreate-components/CoCreate-clone/src/CoCreate-clone.js":
/*!******************************************************************!*\
  !*** ./CoCreate-components/CoCreate-clone/src/CoCreate-clone.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar CoCreateClone = {\n  __cloneBtnClass: 'cloneBtn',\n  __deleteBtnClass: 'deleteBtn',\n  init: function init() {\n    this.__initButtonEvent();\n\n    CoCreate.socket.listen('CoCreateClone-insert', function (data) {\n      var selector = data.selector,\n          element_str = data.element_str,\n          position = data.position;\n      if (!selector) return;\n      var container = document.querySelector(selector);\n\n      if (container) {\n        if (position == \"after\") position = \"afterend\";else position = \"beforebegin\";\n        container.insertAdjacentHTML(position, element_str);\n      }\n    });\n    CoCreate.socket.listen('CoCreateClone-delete', function (data) {\n      var element_id = data.element_id;\n      if (!element_id) return;\n      var selected_el = document.getElementById(element_id);\n\n      if (selected_el) {\n        selected_el.remove();\n      }\n    });\n  },\n  __initButtonEvent: function __initButtonEvent() {// const self = this;\n    // document.addEventListener('click', function(e) {\n    // \tfor (let i=0; i < e.path.length; i++) {\n    // \t\tlet tag = e.path[i];\n    // \t\tif (tag.classList && tag.classList.contains(self.__cloneBtnClass)) {\n    // \t\t\tself.cloneElement(tag)\n    // \t\t}\n    // \t\tif (tag.classList && tag.classList.contains(self.__deleteBtnClass)) {\n    // \t\t\tself.deleteElement(tag)\n    // \t\t}\n    // \t}\n    // }) \n  },\n  cloneElement: function cloneElement(cloneBtn) {\n    var cloneId = cloneBtn.getAttribute(\"data-clone_id\");\n    var clone_name_id = cloneBtn.getAttribute('data-clone_name');\n    var clone_position = cloneBtn.getAttribute('data-clone_position') || 'before';\n    if (!cloneId) return;\n    var clone_name;\n    var input = document.getElementById(clone_name_id);\n\n    if (input) {\n      clone_name = input.value ? input.value : '';\n    }\n\n    var template = document.getElementById(cloneId);\n    if (!template) return;\n    var clonedItem = template.cloneNode(true);\n\n    if (clonedItem.classList.contains('template')) {\n      clonedItem.classList.remove('template');\n    }\n\n    clonedItem.classList.add('clonedItem'); //// remove data-pass_value_id from clonedItem\n\n    clonedItem.removeAttribute('data-pass_value_id');\n    var tags = clonedItem.querySelectorAll(\"*\");\n    tags.forEach(function (tag) {\n      tag.removeAttribute('data-pass_value_id');\n    });\n\n    var prefix = this.__getNewPrefix(clone_name); // clonedItem.setAttribute('prefix', prefix);\n\n\n    this.__createDynamicCloneId(clonedItem, prefix); //. create data-element_id for dnd\n\n\n    this.__createDnDElementId(clonedItem);\n\n    if (clone_position === \"after\") {\n      if (template.nextSibling) {\n        template.parentNode.insertBefore(clonedItem, template.nextSibling);\n      } else {\n        template.parentNode.appendChild(clonedItem);\n      }\n    } else {\n      template.parentNode.insertBefore(clonedItem, template);\n    }\n\n    var domEditorEl = CoCreateHtmlTags.findElementByChild(clonedItem);\n\n    if (domEditorEl) {\n      this.__sendMessageOfClone(domEditorEl, clonedItem, cloneId, clone_position);\n    } //. cloned event\n\n\n    document.dispatchEvent(new CustomEvent('change-content', {\n      detail: {\n        element: clonedItem,\n        type: 'clone-create'\n      }\n    }));\n    template.parentNode.dispatchEvent(new CustomEvent('CoCreate-clone', {\n      detail: {\n        type: 'create'\n      }\n    }));\n    document.dispatchEvent(new CustomEvent('clone-cloned', {\n      detail: {\n        element: clonedItem\n      }\n    }));\n  },\n  deleteElement: function deleteElement(deleteBtn) {\n    var id = deleteBtn.getAttribute('data-clone_id');\n    var item = document.getElementById(id);\n\n    if (item) {\n      var parentNode = item.parentNode;\n      item.remove();\n\n      this.__sendMessageOfDelete(id); //. cloned event\n\n\n      if (parentNode) {\n        document.dispatchEvent(new CustomEvent('change-content', {\n          detail: {\n            element: parentNode,\n            type: 'clone-delete'\n          }\n        }));\n        parentNode.dispatchEvent(new CustomEvent('CoCreate-clone', {\n          detail: {\n            type: 'delete'\n          }\n        }));\n      }\n\n      document.dispatchEvent(new CustomEvent('clone-deleted', {\n        detail: {}\n      }));\n    }\n  },\n  __createDynamicCloneId: function __createDynamicCloneId(clonedItem, prefix) {\n    var self = this;\n    var tags = clonedItem.querySelectorAll(\"*\");\n    var cloneBtns = clonedItem.querySelectorAll('.' + this.__cloneBtnClass);\n    var deleteBtns = clonedItem.querySelectorAll('.' + this.__deleteBtnClass);\n    tags = Array.from(tags);\n    tags.push(clonedItem); // tags.forEach((tag) => {\n    // \tlet name = tag.getAttribute('name');\n    // \tif (name) self.__setAttribute(tag, 'name', name, prefix);\n    // })\n    // self.__setAttribute(clonedItem, 'id', clonedItem.id, prefix)\n\n    clonedItem.setAttribute('id', prefix);\n    /** set data-xxxx=\"[prefix][any]\" **/\n\n    tags.forEach(function (el) {\n      var tag = el.tagName.toLowerCase();\n\n      for (var i = 0; i < el.attributes.length; i++) {\n        var _el$attributes$i = el.attributes[i],\n            name = _el$attributes$i.name,\n            value = _el$attributes$i.value; // const changedValue = value.replace(/\\[prefix\\]/g, prefix);\n\n        var changedValue = value.replace(/{{\\s*clone-name\\s*}}/g, prefix);\n\n        if (/{{\\s*clone-name\\s*}}/g.test(value) && name == \"value\") {\n          switch (tag) {\n            case 'input':\n              el.setAttribute(\"value\", changedValue);\n              break;\n\n            case 'textarea':\n              el.setAttribute(\"value\", changedValue);\n              el.textContent = changedValue;\n              break;\n\n            default:\n              el.innerHTML = changedValue;\n          }\n        }\n\n        el.setAttribute(name, changedValue);\n      }\n    });\n    cloneBtns.forEach(function (btn) {\n      var clone_id = btn.getAttribute('data-clone_id');\n      var clone_name_id = btn.getAttribute('data-clone_name');\n\n      if (clone_id) {\n        var clonableItem = clonedItem.querySelector(\"#\".concat(clone_id));\n\n        var newId = self.__setAttribute(btn, 'data-clone_id', clone_id, prefix);\n\n        if (clonableItem) clonableItem.id = newId;\n      }\n\n      if (clone_name_id) {\n        var clone_name_input = clonedItem.querySelector(\"#\".concat(clone_name_id));\n\n        var newName = self.__setAttribute(btn, 'data-clone_name', clone_name_id, prefix);\n\n        if (clone_name_input) clone_name_input.id = newName;\n      }\n    });\n    deleteBtns.forEach(function (btn) {\n      var clone_id = btn.getAttribute('data-clone_id');\n      if (clone_id) btn.setAttribute('data-clone_id', prefix);\n    });\n  },\n  __getOriginal: function __getOriginal(str) {\n    var original = str;\n    var index = str.indexOf('_');\n    if (index > -1) original = str.substring(index + 1);\n    return original;\n  },\n  __setAttribute: function __setAttribute(element, attrName, value, prefix) {\n    var orgValue = this.__getOriginal(value);\n\n    var newValue = prefix == '' ? orgValue : \"\".concat(prefix, \"_\").concat(orgValue);\n    element.setAttribute(attrName, newValue);\n    return newValue;\n  },\n  __createDnDElementId: function __createDnDElementId(clonedItem) {\n    var dnd_elements = document.querySelectorAll('[data-draggable=\"true\"], [data-droppable=\"true\"]');\n    dnd_elements.forEach(function (el) {\n      el.setAttribute('data-element_id', CoCreate.utils.generateUUID());\n    });\n\n    if (clonedItem.getAttribute('data-draggable') == \"true\" || clonedItem.getAttribute('data-droppable') == \"true\") {\n      clonedItem.setAttribute('data-element_id', CoCreate.utils.generateUUID());\n    }\n  },\n  __getNewPrefix: function __getNewPrefix(clone_name) {\n    var clonedItems = document.querySelectorAll('.clonedItem');\n    var exist = false;\n    clonedItems.forEach(function (el) {\n      var prefix = el.getAttribute('prefix');\n\n      if (clone_name == prefix) {\n        exist = true;\n        return;\n      }\n    });\n\n    if (exist || !clone_name) {\n      return CoCreate.utils.generateUUID(12);\n    } else {\n      return clone_name;\n    }\n  },\n  __sendMessageOfClone: function __sendMessageOfClone(parent, item, id, position) {\n    var document_id = parent.getAttribute('data-document_id') || \"\";\n    var name = parent.getAttribute('name') || \"\";\n    var addtionSelector = \"\";\n\n    if (document_id) {\n      addtionSelector = \"[data-document_id='\".concat(document_id, \"']\");\n    } else {\n      return;\n    }\n\n    if (name) {\n      addtionSelector += \"[name='\".concat(name, \"']\");\n    }\n\n    CoCreate.message.send({\n      rooms: [],\n      emit: {\n        message: 'CoCreateClone-insert',\n        data: {\n          selector: \"div.domEditor\".concat(addtionSelector, \" #\").concat(id, \".template\"),\n          element_str: item.outerHTML,\n          position: position\n        }\n      }\n    });\n  },\n  __sendMessageOfDelete: function __sendMessageOfDelete(element_id) {\n    CoCreate.message.send({\n      rooms: [],\n      emit: {\n        message: 'CoCreateClone-remove',\n        data: {\n          element_id: element_id\n        }\n      }\n    });\n  }\n};\nCoCreateClone.init();\nCoCreateAction.registerEvent(\"cloneAction\", CoCreateClone.cloneElement, CoCreateClone, \"clone-cloned\");\nCoCreateAction.registerEvent(\"createClone\", CoCreateClone.cloneElement, CoCreateClone, \"clone-cloned\");\nCoCreateAction.registerEvent(\"deleteClone\", CoCreateClone.deleteElement, CoCreateClone, \"clone-deleted\");\n/* harmony default export */ __webpack_exports__[\"default\"] = (CoCreateClone);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./CoCreate-components/CoCreate-clone/src/CoCreate-clone.js\n");

/***/ })

/******/ })["default"];
});